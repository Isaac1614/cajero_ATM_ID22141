<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>